
security:
    access_decision_manager:
        strategy: unanimous

    enable_authenticator_manager: true

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: registration_number
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin
            context: my_context
            provider: user_provider
            access_denied_handler: App\Security\AccessDeniedHandler

            custom_authenticators:
                - App\Security\TestAuthenticator
            logout:
                path: app_logout

        main:
            context: my_context

            provider: user_provider

            custom_authenticators:
                - App\Security\TestSimpleAuthenticator
            logout:
                path: app_logout
                # target: products.index

    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        -
          path: ^/admin
          roles: 'ROLE_ADMIN'
          allow_if: "token.hasAttribute('ULIMS:IS_USED_ADMIN_AUTH') and token.getAttribute('ULIMS:IS_USED_ADMIN_AUTH') == true"


